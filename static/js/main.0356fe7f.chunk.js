(this["webpackJsonpgoit-react-hw-02-phonebook"]=this["webpackJsonpgoit-react-hw-02-phonebook"]||[]).push([[0],{33:function(t,e,n){},34:function(t,e,n){},46:function(t,e,n){t.exports={container:"Container_container__Q4U-T"}},51:function(t,e,n){"use strict";n.r(e);var a=n(0),r=n.n(a),c=n(24),s=n.n(c),i=(n(33),n(12)),o=n(13),l=n(17),u=n(16),b=n(10),d=(n(34),n(20)),j=n.n(d),m=n(53),h=n(54),p=n(1);function f(t){var e=t.contacts,n=t.filter,a=t.filterValue;return Object(p.jsxs)("div",{className:"container",children:[Object(p.jsx)("h2",{children:"Contacts:"}),Object(p.jsx)(m.a,{children:Object(p.jsxs)(m.a.Group,{className:"mb-3",children:[Object(p.jsx)(m.a.Label,{children:"Find contact"}),Object(p.jsx)(m.a.Control,{type:"text",onChange:n})]})}),Object(p.jsx)(h.a,{as:"ol",numbered:!0,children:e.map((function(t){var e=j.a.generate();if(t.name.includes(a))return Object(p.jsxs)(h.a.Item,{as:"li",children:[t.name,t.number]},e);h.a.Item,t.name,t.number}))})]})}n(46);var O=n(8),x=n(52),v=(n(50),function(t){Object(l.a)(n,t);var e=Object(u.a)(n);function n(){var t;Object(i.a)(this,n);for(var a=arguments.length,r=new Array(a),c=0;c<a;c++)r[c]=arguments[c];return(t=e.call.apply(e,[this].concat(r))).state={name:"",number:""},t.onSubmitInputHander=function(e){e.preventDefault();var n=t.state.name,a=t.state.number;t.props.onSubmitFunc({name:n,number:a})},t.inputValueHandler=function(e){var n=e.target.name;t.setState(Object(O.a)({},n,e.target.value))},t}return Object(o.a)(n,[{key:"render",value:function(){return Object(p.jsx)("div",{className:"container",children:Object(p.jsxs)(m.a,{children:[Object(p.jsxs)(m.a.Group,{className:"mb-3",controlId:"formBasicEmail",children:[Object(p.jsx)(m.a.Label,{children:"Contact name"}),Object(p.jsx)(m.a.Control,{type:"text",name:"name",pattern:"^[a-zA-Z\u0430-\u044f\u0410-\u042f]+(([' -][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$",title:"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan",required:!0,onChange:this.inputValueHandler}),Object(p.jsx)(m.a.Label,{children:"Number"}),Object(p.jsx)(m.a.Control,{type:"tel",name:"number",pattern:"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}",title:"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +",required:!0,onChange:this.inputValueHandler})]}),Object(p.jsx)(x.a,{variant:"primary",type:"submit",onClick:this.onSubmitInputHander,children:"Submit"})]})})}}]),n}(b.Component)),C=function(t){Object(l.a)(n,t);var e=Object(u.a)(n);function n(){var t;Object(i.a)(this,n);for(var a=arguments.length,r=new Array(a),c=0;c<a;c++)r[c]=arguments[c];return(t=e.call.apply(e,[this].concat(r))).state={contacts:[],filter:""},t.contactAdd=function(e){var n=e.name,a=e.number;t.setState((function(t){t.contacts.push({name:n,number:a})})),console.log(t.state.contacts)},t.findContactInputHandler=function(e){t.setState({filter:e.target.value})},t}return Object(o.a)(n,[{key:"render",value:function(){return Object(p.jsxs)("div",{children:[Object(p.jsx)(v,{onSubmitFunc:this.contactAdd}),Object(p.jsx)(f,{contacts:this.state.contacts,filter:this.findContactInputHandler,filterValue:this.state.filter})]})}}]),n}(b.Component),g=C;s.a.render(Object(p.jsx)(r.a.StrictMode,{children:Object(p.jsx)(g,{})}),document.getElementById("root"))}},[[51,1,2]]]);
//# sourceMappingURL=main.0356fe7f.chunk.js.map